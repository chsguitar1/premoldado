/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TelaComposicao.java
 *
 * Created on 30/09/2010, 22:54:01
 */
package Telacadastros;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.event.InternalFrameEvent;
import javax.swing.event.InternalFrameListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import persistencia.Composicao;
import persistencia.Itemcomposicao;
import Banco.Conexao;
import premoldados.TelaSistema;
import Telaconsulta.TelaConsulta;
import ajuda.PlayMovie;

/**
 *
 * @author chs
 */
public class TelaComposicao extends TelaCadastro implements MouseListener, InternalFrameListener, KeyListener {

    private JTable jtTabela = new JTable() {

        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };
    private DefaultTableModel dtm;
    public Composicao compoPer = new Composicao();
    public Itemcomposicao itecompPer = new Itemcomposicao();
    TelaConsulta consulta;
    TelaMateriaPrima telamatprima;
    public Vector colu = new Vector();

    /** Creates new form BeanForm */
    public TelaComposicao() {
        montaTabela(new String[]{"Codigo", "Descrição", "Quantidade", "Unitario", "Subtotal"});
        jtTabela.addMouseListener(this);
        initComponents();
        campos.add(acaTextfieldCodigo);
        campos.add(acaTextfieldCodigoIt);
        campos.add(acaTextfieldNome);
        campos.add(acaTextfieldNomeIt);
        campos.add(acaTextfieldQtde);
        campos.add(acaMonetarioTotal);
        campos.add(acaMonetarioVlrUnit);
        campos.add(acaBotoesConsulta);
        campos.add(acaBotoesAddItens);
        campos.add(acaComboMatPrima);
        campos.add(acaBotoesDelIt);
        campos.add(acaBotoesConsulta);
        campos.add(acaComboStatus);
        campos.add(acaBotoesNMat);
        campos.add(acaMonetarioSubTot);
        campos.add(acaBotoesLimar);
        acaComboStatus.setSelectedIndex(1);
        acaTextfieldQtde.addKeyListener(this);
        acaMonetarioVlrUnit.addKeyListener(this);

        habilitaCampos(false);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanelItensPon1 = new javax.swing.JPanel();
        acaLabelNomeItens1 = new componentes.AcaLabel();
        acaBotoesConsulta = new componentes.AcaBotoes(false,"","Mais....");
        jScrollPaneTb = new javax.swing.JScrollPane(jtTabela);
        acaComboMatPrima = new componentes.AcaCombo();
        acaComboMatPrima.buscaResult("select matcod,matnome from materiaprima");
        acaLabel1 = new componentes.AcaLabel();
        acaLabelNome = new componentes.AcaLabel();
        acaTextfieldCodigoIt = new componentes.AcaTextfield();
        acaTextfieldNomeIt = new componentes.AcaTextfield();
        acaLabelQtd = new componentes.AcaLabel();
        acaTextfieldQtde = new componentes.AcaTextfield();
        acaLabelVlrUnit = new componentes.AcaLabel();
        acaLabel2 = new componentes.AcaLabel();
        acaMonetarioVlrUnit = new componentes.AcaMonetario();
        acaBotoesAddItens = new componentes.AcaBotoes(false,"","Adicionar Item");
        acaBotoesDelIt = new componentes.AcaBotoes(false,"","Remover item selecionado");
        acaBotoesNMat = new componentes.AcaBotoes(false,"Novo","Cadastrar materia prima");
        acaLabelSub = new componentes.AcaLabel();
        acaMonetarioSubTot = new componentes.AcaMonetario();
        acaLabelRs2 = new componentes.AcaLabel();
        acaBotoesLimar = new componentes.AcaBotoes(false,"","Limpa selecão da materia prima");
        jPanelPon = new javax.swing.JPanel();
        acaLabelCodigo = new componentes.AcaLabel();
        acaTextfieldCodigo = new componentes.AcaTextfield();
        acaLabelNomeCop = new componentes.AcaLabel();
        acaTextfieldNome = new componentes.AcaTextfield(true,"Nome da composição",1);
        acaLabelRs = new componentes.AcaLabel();
        acaMonetarioTotal = new componentes.AcaMonetario(true,"Valor Total da composição",1);
        acaLabel3 = new componentes.AcaLabel();
        acaComboStatus = new componentes.AcaCombo();
        acaComboStatus.comboFiltro(new int[]{0,1,2}, new String[]{"Inativo","Ativo","Negativo"});

        setPreferredSize(new java.awt.Dimension(822, 657));
        setSize(new java.awt.Dimension(788, 700));
        setTitle("Cadastro de Composiçoes");

        jPanelItensPon1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Itens da Composição", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        acaLabelNomeItens1.setText("Selecionar Materia Prima ");

        acaBotoesConsulta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/search.png"))); // NOI18N
        acaBotoesConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acaBotoesConsultaActionPerformed(evt);
            }
        });

        jScrollPaneTb.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tabela De Itens de Composição", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        acaComboMatPrima.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                acaComboMatPrimaItemStateChanged(evt);
            }
        });
        acaComboMatPrima.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                acaComboMatPrimaFocusGained(evt);
            }
        });

        acaLabel1.setText("Codigo");

        acaLabelNome.setText("Descrição");

        acaTextfieldCodigoIt.setEditable(false);

        acaTextfieldNomeIt.setEditable(false);

        acaLabelQtd.setText("Quantidade");

        acaLabelVlrUnit.setText("Valor Unitario");

        acaLabel2.setText("R$");
        acaLabel2.setFont(new java.awt.Font("Arial Black", 0, 14));

        acaMonetarioVlrUnit.setEditable(false);

        acaBotoesAddItens.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/edit_add1.png"))); // NOI18N
        acaBotoesAddItens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acaBotoesAddItensActionPerformed(evt);
            }
        });

        acaBotoesDelIt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/edit_remove.png"))); // NOI18N
        acaBotoesDelIt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acaBotoesDelItActionPerformed(evt);
            }
        });

        acaBotoesNMat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acaBotoesNMatActionPerformed(evt);
            }
        });

        acaLabelSub.setText("Subtotal");

        acaMonetarioSubTot.setEditable(false);
        acaMonetarioSubTot.setText("");

        acaLabelRs2.setText("R$");
        acaLabelRs2.setFont(new java.awt.Font("Arial Black", 0, 14));

        acaBotoesLimar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/x.png"))); // NOI18N
        acaBotoesLimar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acaBotoesLimarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelItensPon1Layout = new javax.swing.GroupLayout(jPanelItensPon1);
        jPanelItensPon1.setLayout(jPanelItensPon1Layout);
        jPanelItensPon1Layout.setHorizontalGroup(
            jPanelItensPon1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelItensPon1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelItensPon1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelItensPon1Layout.createSequentialGroup()
                        .addComponent(acaLabelNomeItens1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(acaComboMatPrima, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(acaBotoesNMat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(acaBotoesConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelItensPon1Layout.createSequentialGroup()
                        .addGroup(jPanelItensPon1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelItensPon1Layout.createSequentialGroup()
                                .addGroup(jPanelItensPon1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelItensPon1Layout.createSequentialGroup()
                                        .addComponent(acaLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(acaTextfieldCodigoIt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelItensPon1Layout.createSequentialGroup()
                                        .addComponent(acaLabelQtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(acaTextfieldQtde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanelItensPon1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelItensPon1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(acaLabelVlrUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(acaLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(acaMonetarioVlrUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(33, 33, 33)
                                        .addComponent(acaLabelSub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(16, 16, 16)
                                        .addComponent(acaLabelRs2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(acaMonetarioSubTot, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelItensPon1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(acaLabelNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(acaTextfieldNomeIt, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jScrollPaneTb, javax.swing.GroupLayout.PREFERRED_SIZE, 597, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelItensPon1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(acaBotoesDelIt, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(acaBotoesLimar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(acaBotoesAddItens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanelItensPon1Layout.setVerticalGroup(
            jPanelItensPon1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelItensPon1Layout.createSequentialGroup()
                .addGroup(jPanelItensPon1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(acaLabelNomeItens1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acaBotoesConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelItensPon1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(acaComboMatPrima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(acaBotoesNMat, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addGroup(jPanelItensPon1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelItensPon1Layout.createSequentialGroup()
                        .addGroup(jPanelItensPon1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(acaLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(acaLabelNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(acaTextfieldNomeIt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(acaTextfieldCodigoIt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelItensPon1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(acaLabelQtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(acaTextfieldQtde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(acaLabelVlrUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(acaLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(acaMonetarioVlrUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(acaLabelSub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(acaMonetarioSubTot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(acaLabelRs2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelItensPon1Layout.createSequentialGroup()
                        .addComponent(acaBotoesAddItens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(acaBotoesLimar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanelItensPon1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelItensPon1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPaneTb, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelItensPon1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(acaBotoesDelIt, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(55, 55, 55))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanelItensPon1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanelItensPon1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelPon.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados da Composição"));

        acaLabelCodigo.setText("Codigo");

        acaTextfieldCodigo.setEditable(false);
        acaTextfieldCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acaTextfieldCodigoActionPerformed(evt);
            }
        });

        acaLabelNomeCop.setText("Nome da Composição");

        acaLabelRs.setText("Total ");
        acaLabelRs.setFont(new java.awt.Font("Arial Black", 0, 24));

        acaMonetarioTotal.setEditable(false);
        acaMonetarioTotal.setFont(new java.awt.Font("Arial Black", 0, 24));

        acaLabel3.setText("Status");

        javax.swing.GroupLayout jPanelPonLayout = new javax.swing.GroupLayout(jPanelPon);
        jPanelPon.setLayout(jPanelPonLayout);
        jPanelPonLayout.setHorizontalGroup(
            jPanelPonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPonLayout.createSequentialGroup()
                        .addComponent(acaLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(acaComboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelPonLayout.createSequentialGroup()
                        .addGroup(jPanelPonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(acaLabelNomeCop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelPonLayout.createSequentialGroup()
                                .addComponent(acaLabelCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(acaTextfieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanelPonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelPonLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(acaTextfieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelPonLayout.createSequentialGroup()
                                .addGap(133, 133, 133)
                                .addComponent(acaLabelRs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(acaMonetarioTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(224, Short.MAX_VALUE))
        );
        jPanelPonLayout.setVerticalGroup(
            jPanelPonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPonLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelPonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acaLabelCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acaTextfieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acaMonetarioTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acaLabelRs, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanelPonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(acaTextfieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acaLabelNomeCop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelPonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acaComboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acaLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getPainelCentral());
        getPainelCentral().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanelPon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelPon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("Cadastro de Composições");
    }// </editor-fold>//GEN-END:initComponents

    private void acaBotoesLimarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acaBotoesLimarActionPerformed
        acaTextfieldCodigoIt.setText("");
        acaTextfieldNomeIt.setText("");
        acaMonetarioVlrUnit.setValor(0.00);
        acaTextfieldQtde.setText("");
        acaComboMatPrima.setSelectedIndex(0);
        acaMonetarioSubTot.setValor(0.00);
        if (!acaMonetarioSubTot.getValor().equals("")) {
            calculaTotal();

        }
}//GEN-LAST:event_acaBotoesLimarActionPerformed

    private void acaBotoesNMatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acaBotoesNMatActionPerformed
        if (telamatprima == null) {
            telamatprima = new TelaMateriaPrima();
            telamatprima.addInternalFrameListener(this);
            TelaSistema.jdp.add(telamatprima);
            telamatprima.setVisible(true);
            tipoOperacao = NOVOITEM;
        }
        TelaSistema.jdp.moveToFront(telamatprima);
        tipoOperacao = NOVOITEM;
}//GEN-LAST:event_acaBotoesNMatActionPerformed

    private void acaBotoesDelItActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acaBotoesDelItActionPerformed
        if (tipoOperacao == ALTERANDO) {
            itecompPer.setCompocod(Integer.parseInt(acaTextfieldCodigo.getText()));
            itecompPer.setMatcod(Integer.parseInt(dtm.getValueAt(jtTabela.getSelectedRow(), 0).toString()));
            Conexao.executaSql(itecompPer.getExcluiSql());
            dtm.removeRow(jtTabela.getSelectedRow());
            calculaTotal();
        } else {
            dtm.removeRow(jtTabela.getSelectedRow());
            //acaMonetarioTotal.setValor(Double.parseDouble(calculaTotal(acaMonetarioVlrUnit.getValor().toString())));
            calculaTotal();
        }
}//GEN-LAST:event_acaBotoesDelItActionPerformed

    private void acaBotoesAddItensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acaBotoesAddItensActionPerformed
        if (acaTextfieldQtde.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Informe a quantidade do Materia");

            return;
        } else {
            addItem();

            // acaMonetarioTotal.setValor(Double.parseDouble(calculaTotal(acaMonetarioVlrUnit.getValor().toString())));
            acaTextfieldCodigoIt.setText("");
            acaTextfieldNomeIt.setText("");
            acaTextfieldQtde.setText("");
            acaMonetarioSubTot.setValor(0.00);
            acaMonetarioVlrUnit.setText("");
            acaComboMatPrima.setValor(0);
            calculaTotal();
        }
    }//GEN-LAST:event_acaBotoesAddItensActionPerformed

    private void acaComboMatPrimaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_acaComboMatPrimaFocusGained
        if (tipoOperacao == NOVOITEM) {
            acaComboMatPrima.buscaResult("select matcod,matnome from materiaprima");
        }

    }//GEN-LAST:event_acaComboMatPrimaFocusGained

    private void acaComboMatPrimaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_acaComboMatPrimaItemStateChanged

        if (acaComboMatPrima.getSelectedIndex() >= 0) {
            if (acaComboMatPrima.isPopupVisible()) {
                if (!validaItens(acaComboMatPrima.getValor())) {
                    acaTextfieldCodigoIt.setText(String.valueOf(acaComboMatPrima.getValor()));
                    acaTextfieldNomeIt.setText(acaComboMatPrima.getSelectedItem().toString());

                    try {
                        ResultSet rs = Conexao.executaQuery("select matvalor from materiaprima where matcod = " + acaComboMatPrima.getValor() + "");
                        rs.next();
                        acaMonetarioVlrUnit.setValor(rs.getDouble(1));
                    } catch (SQLException e) {
                        e.printStackTrace();
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Ja existe a materia prima na composição");
                    acaComboMatPrima.setSelectedIndex(0);
                    return;
                }
            }

        }
}//GEN-LAST:event_acaComboMatPrimaItemStateChanged

    private void acaBotoesConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acaBotoesConsultaActionPerformed
        acaComboMatPrima.setSelectedIndex(-1);
        if (consulta == null) {
            //consulta = new TelaConsulta("Consulta Materia Prima", this, new int[]{1, 2}, new String[]{"codigo", "nome"}, "materiaprima", "matcod", "matnome", null);
            consulta = new TelaConsulta("Consulta Materia Prima", this, new int[]{1, 2}, new String[]{"Codigo", "nome"}, "materiaprima", "matcod", "matnome", null, true);
            colu.add("CODIGO");
            colu.add("NOME");
            consulta.setColu(colu);
            consulta.addInternalFrameListener(this);
            TelaSistema.jdp.add(consulta);
            consulta.setVisible(true);
            tipoOperacao = PESQUISANDO;
        }
        TelaSistema.jdp.moveToFront(consulta);
}//GEN-LAST:event_acaBotoesConsultaActionPerformed

    private void acaTextfieldCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acaTextfieldCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_acaTextfieldCodigoActionPerformed
    public void obterCampos() {
        if (tipoOperacao == ALTERANDO || tipoOperacao == EXCLUINDO) {
            compoPer.setCompocod(Integer.parseInt(acaTextfieldCodigo.getText()));
        }
        compoPer.setComponome(acaTextfieldNome.getTexto());
        compoPer.setCompostatus(acaComboStatus.getValor());
        compoPer.setCompovlrtotal(Double.parseDouble(acaMonetarioTotal.getValor()));

    }

    public void preencheCampos() {
        if (tipoOperacao == PESQUISANDO) {
            acaTextfieldCodigo.setText(String.valueOf(compoPer.getCompocod()));
        }
        acaTextfieldNome.setText(compoPer.getComponome());
        acaMonetarioTotal.setValor(compoPer.getCompovlrtotal());
        acaComboStatus.setValor(compoPer.getCompostatus());

    }

    public boolean validaItens(int codigo) {
        for (int x = 0; x < dtm.getRowCount(); x++) {
            if (Integer.parseInt((String) dtm.getValueAt(x, 0)) == codigo) {
                return true;
            }

        }
        return false;

    }
  @Override
    protected void ajuda() {
        PlayMovie videos = new PlayMovie("composicao.wmv");


    }
    public void montaTabela(String[] colunas) {

        dtm = (DefaultTableModel) jtTabela.getModel();
        for (int i = 0; i < colunas.length; i++) {
            dtm.addColumn(colunas[i]);
        }

        jtTabela.getColumn(jtTabela.getColumnName(0)).setPreferredWidth(50);

//        jtTabela.getColumn(jtTabela.getColumnName(2)).setPreferredWidth(90);
//        jtTabela.getColumn(jtTabela.getColumnName(3)).setPreferredWidth(90);
//        jtTabela.getColumn(jtTabela.getColumnName(4)).setPreferredWidth(90);
//        jtTabela.getColumn(jtTabela.getColumnName(5)).setPreferredWidth(100);
        jtTabela.setModel(dtm);
        TableColumnModel modeloColuna = jtTabela.getColumnModel();

        jtTabela.getTableHeader().setReorderingAllowed(false);
        jtTabela.getColumnModel().getColumn(0).setMaxWidth(80);
        jtTabela.getColumnModel().getColumn(1).setMaxWidth(190);
        jtTabela.getColumnModel().getColumn(0).setPreferredWidth(80);
        jtTabela.getColumnModel().getColumn(1).setPreferredWidth(190);
        jtTabela.getColumnModel().getColumn(2).setPreferredWidth(100);
        jtTabela.getColumnModel().getColumn(2).setMaxWidth(100);
        jtTabela.getColumnModel().getColumn(3).setPreferredWidth(100);
        jtTabela.getColumnModel().getColumn(3).setMaxWidth(100);
        jtTabela.getColumnModel().getColumn(4).setPreferredWidth(100);
        jtTabela.getColumnModel().getColumn(4).setMaxWidth(100);

        jtTabela.getColumnModel().getColumn(0).setResizable(false);


        jtTabela.getColumnModel().getColumn(1).setResizable(false);
        DefaultTableCellRenderer renderer1 = new DefaultTableCellRenderer();
        renderer1.setHorizontalAlignment(SwingConstants.CENTER);
    }

    public void montaTabela(String textoSql) {

        try {
            while (dtm.getRowCount() > 0) {
                dtm.removeRow(0);
            }
            ResultSet rs1 = Conexao.executaQuery(textoSql);
            ResultSetMetaData rsmd1 = rs1.getMetaData();
            Vector vetor;
            while (rs1.next()) {
                vetor = new Vector();
                for (int i = 0; i < rsmd1.getColumnCount(); i++) {
                    vetor.add(rs1.getString(i + 1));

                }

                dtm.addRow(vetor);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não foi possível efetuar a pesquisa");
            e.printStackTrace();
        }

        TableColumnModel modeloColuna = jtTabela.getColumnModel();
        jtTabela.getTableHeader().setReorderingAllowed(false);
        jtTabela.getColumnModel().getColumn(0).setMaxWidth(180);
        jtTabela.getColumnModel().getColumn(0).setPreferredWidth(95);
        jtTabela.getColumnModel().getColumn(0).setResizable(false);
        jtTabela.getColumnModel().getColumn(1).setMaxWidth(70);
        jtTabela.getColumnModel().getColumn(1).setPreferredWidth(10);

        jtTabela.getColumnModel().getColumn(1).setResizable(false);

    }

    public void addItem() {

        Object[] item = {acaTextfieldCodigoIt.getText(), acaTextfieldNomeIt.getText().toUpperCase(), acaTextfieldQtde.getText(), acaMonetarioVlrUnit.getValor(), acaMonetarioSubTot.getValor()};
        PrencheTabela(item);
        //acaTextfieldTotal.setText(String.valueOf(calculaTotal()));
    }

    public void PrencheTabela(Object[] item) {
        dtm = (DefaultTableModel) jtTabela.getModel();
        dtm.addRow(item);

        jtTabela.setModel(dtm);
    }

    public void limparPesquisa() {
        while (dtm.getRowCount() > 0) {
            dtm.removeRow(0);
        }
    }

    @Override
    protected void cancelar() {
        super.cancelar();
        acaComboMatPrima.setSelectedIndex(0);
        acaComboStatus.setSelectedIndex(1);
        limparPesquisa();

    }

    @Override
    protected void incluir() {
        super.incluir();
        acaMonetarioTotal.setValor(0.00);

    }

    @Override
    protected void consultar() {
        if (consulta == null) {
            consulta = new TelaConsulta("Consulta Composição", this, new int[]{1, 2}, new String[]{"Codigo", "Nome"}, "composicao", "compocod", "componome", null);
            colu.addElement("CODIGO");
            colu.add("NOME");
            consulta.setColu(colu);
            //consulta.setTodosB(true);
            consulta.addInternalFrameListener(this);
            tipoOperacao = PESQUISANDO;
            TelaSistema.jdp.add(consulta);
            consulta.setVisible(true);
        }
        TelaSistema.jdp.moveToFront(consulta);

    }

    @Override
    protected void confirmar() {
        if (acaMonetarioTotal.getText().equals("0,00")) {
            JOptionPane.showMessageDialog(null, "Nao Itens cadastrados");
            return;
        } else {
            super.confirmar();
            acaComboMatPrima.setSelectedIndex(0);
            acaComboStatus.setSelectedIndex(1);
            limparPesquisa();
        }
//        }
    }

    @Override
    protected void alterar() {
        super.alterar();
        jtTabela.setEnabled(true);

    }

//    @Override
//    protected void excluir() {
//        super.excluir();
////        acaComboMatPrima.setSelectedIndex(0);
////        acaComboStatus.setSelectedIndex(1);
////        limparCampos();
////        limparPesquisa();
//
//    }

    public void calculaTotal() {
        acaMonetarioTotal.setValor(0.00);
        double soma = 0.00;
        double valor = 0;
        for (int x = 0; x < dtm.getRowCount(); x++) {

            if (!acaMonetarioTotal.getText().equals("")) {
                soma = soma + Double.parseDouble(jtTabela.getValueAt(x, 4).toString().replace(",", "."));
                acaMonetarioTotal.setValor(soma);
            }
        }

    }

    public void calculaUnitario() {
        int quantidade = Integer.parseInt(acaTextfieldQtde.getText());
        double valUnitario = Double.parseDouble(acaMonetarioVlrUnit.getValor());
        double valTotal = ((int) ((quantidade * valUnitario) * 100.0)) / 100.0;
        acaMonetarioSubTot.setValor(valTotal);
    }

    @Override
    protected boolean incluirBD() {
        obterCampos();
        if (compoPer.verificaDuplicidade()) {
            ResultSet rs = null;
            try {
                rs = compoPer.getInsereRs();
                rs.next();
                itecompPer.setCompocod(rs.getInt(1));
                for (int x = 0; x < jtTabela.getRowCount(); x++) {

                    itecompPer.setMatcod(Integer.parseInt(jtTabela.getValueAt(x, 0).toString()));
                    itecompPer.setItcompoqtde(Float.parseFloat(jtTabela.getValueAt(x, 2).toString()));
                    itecompPer.setItcompovalor(Double.parseDouble(jtTabela.getValueAt(x, 4).toString()));
                      itecompPer.setItvlrUnit(Double.parseDouble(jtTabela.getValueAt(x, 3).toString()));

                    Conexao.executaSql(itecompPer.getInsereSql());
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
            return true;
        }
        return false;
    }

    @Override
    public void consultarDados(int codigo) {
        try {
            compoPer.setCompocod(codigo);

            ResultSet rs = Conexao.executaQuery(compoPer.getConsultaTodos());
            rs.next();
            compoPer.setCompocod(rs.getInt(1));
            itecompPer.setCompocod(rs.getInt(1));
            compoPer.setComponome(rs.getString(2));
            compoPer.setCompovlrtotal(rs.getDouble(3));
            compoPer.setCompostatus(rs.getInt(4));




        } catch (SQLException e) {
            e.printStackTrace();
        }
        preencheCampos();
        montaTabela(itecompPer.getConsultaSqlString());
        jtTabela.setEnabled(false);
        habilitaCampos(false);
        habilitaBotoesConsulta(true);

    }

    @Override
    public void consultaItens(int codigo) {

        try {
            ResultSet rs = Conexao.executaQuery("select matcod,matnome,matvalor from materiaprima where matcod = " + codigo + " ");
            rs.next();
            acaTextfieldCodigoIt.setText(String.valueOf(rs.getString(1)));
            acaTextfieldNomeIt.setText(rs.getString(2));
            acaMonetarioVlrUnit.setValor(rs.getDouble(3));
        } catch (SQLException e) {
            e.printStackTrace();
        }


    }

    @Override
    protected boolean alterarBD() {
        obterCampos();
        if (compoPer.verificaDuplicidadeAtualiza()) {

            try {
                Conexao.executaSql(compoPer.getAtualizaSql());

                itecompPer.setCompocod(Integer.parseInt(acaTextfieldCodigo.getText()));

                for (int x = 0; x < dtm.getRowCount(); x++) {
                    itecompPer.setMatcod(Integer.parseInt(jtTabela.getValueAt(x, 0).toString()));
                    itecompPer.setItcompoqtde(Float.parseFloat(jtTabela.getValueAt(x, 2).toString()));
                    itecompPer.setItcompovalor(Double.parseDouble(jtTabela.getValueAt(x, 4).toString()));
                    Conexao.executaSql(itecompPer.getAtualizaSql());
                }
                limparPesquisa();
            } catch (Exception e) {
            }
            return true;

        }
        return false;
    }

    @Override
    protected boolean excluirBD() {
        compoPer.setCompocod(Integer.parseInt(acaTextfieldCodigo.getText()));
        int opcao = -1;
        if (Conexao.executaSqlExcluir(compoPer.getExcluiSql()) == Conexao.DEPENDENCIA) {
            opcao = 1;
        } else {
            opcao = 0;
        }
        if (Conexao.executaSqlExcluir(compoPer.getExcluiSql()) == Conexao.OUTROERRO) {
            opcao = 0;
            return false;
        }
        if (opcao == 1) {
            Object[] botoes = {"Sim", "Não"};
            int mensagem = JOptionPane.showOptionDialog(null, "Existe dependencia de dados \n Deseja inativar o cadastro",
                    "Sair", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, botoes, botoes[0]);
            if (mensagem == JOptionPane.YES_OPTION) {

                Conexao.executaSql("execute procedure inativastatus(" + compoPer.getCompocod() + ",'composicao','compocod','compostatus') ");
                habilitarBotoes(true);
                habilitaCampos(false);
                return false;

            }
            if (mensagem == JOptionPane.NO_OPTION) {
                habilitaCampos(true);
                return false;
            }


        }
        return true;

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private componentes.AcaBotoes acaBotoesAddItens;
    private componentes.AcaBotoes acaBotoesConsulta;
    private componentes.AcaBotoes acaBotoesDelIt;
    private componentes.AcaBotoes acaBotoesLimar;
    private componentes.AcaBotoes acaBotoesNMat;
    private componentes.AcaCombo acaComboMatPrima;
    private componentes.AcaCombo acaComboStatus;
    private componentes.AcaLabel acaLabel1;
    private componentes.AcaLabel acaLabel2;
    private componentes.AcaLabel acaLabel3;
    private componentes.AcaLabel acaLabelCodigo;
    private componentes.AcaLabel acaLabelNome;
    private componentes.AcaLabel acaLabelNomeCop;
    private componentes.AcaLabel acaLabelNomeItens1;
    private componentes.AcaLabel acaLabelQtd;
    private componentes.AcaLabel acaLabelRs;
    private componentes.AcaLabel acaLabelRs2;
    private componentes.AcaLabel acaLabelSub;
    private componentes.AcaLabel acaLabelVlrUnit;
    private componentes.AcaMonetario acaMonetarioSubTot;
    private componentes.AcaMonetario acaMonetarioTotal;
    private componentes.AcaMonetario acaMonetarioVlrUnit;
    private componentes.AcaTextfield acaTextfieldCodigo;
    private componentes.AcaTextfield acaTextfieldCodigoIt;
    private componentes.AcaTextfield acaTextfieldNome;
    private componentes.AcaTextfield acaTextfieldNomeIt;
    private componentes.AcaTextfield acaTextfieldQtde;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelItensPon1;
    private javax.swing.JPanel jPanelPon;
    private javax.swing.JScrollPane jScrollPaneTb;
    // End of variables declaration//GEN-END:variables

    public void mouseClicked(MouseEvent e) {
        if (e.getClickCount() == 2 & tipoOperacao != ALTERANDO) {
            acaTextfieldCodigoIt.setText((String) dtm.getValueAt(jtTabela.getSelectedRow(), 0));
            acaTextfieldNomeIt.setText((String) dtm.getValueAt(jtTabela.getSelectedRow(), 1));
            acaTextfieldQtde.setText((String) dtm.getValueAt(jtTabela.getSelectedRow(), 2));
          
            acaMonetarioVlrUnit.setValor((Double.parseDouble(dtm.getValueAt(jtTabela.getSelectedRow(), 3).toString().replace(",", "."))));
            acaMonetarioSubTot.setValor(Double.parseDouble(dtm.getValueAt(jtTabela.getSelectedRow(), 4).toString().replace(",", ".")));
//            String teste = dtm.getValueAt(jtTabela.getSelectedRow(), 4).toString().replace(",", "");
//            acaMonetarioSubTot.setValor(Double.parseDouble(teste));
            dtm.removeRow(jtTabela.getSelectedRow());

            calculaTotal();
            //acaMonetarioTotal.setValor(Double.parseDouble(calculaTotal(acaMonetarioVlrUnit.getValor().toString())));
        }
    }

    public void mousePressed(MouseEvent e) {
    }

    public void mouseReleased(MouseEvent e) {
    }

    public void mouseEntered(MouseEvent e) {
    }

    public void mouseExited(MouseEvent e) {
    }

    public void internalFrameOpened(InternalFrameEvent e) {
    }

    public void internalFrameClosing(InternalFrameEvent e) {
    }

    public void internalFrameClosed(InternalFrameEvent e) {
        if (e.getSource() == consulta) {
            consulta = null;
        }
        if (e.getSource() == telamatprima) {
            telamatprima = null;
        }
    }

    public void internalFrameIconified(InternalFrameEvent e) {
    }

    public void internalFrameDeiconified(InternalFrameEvent e) {
    }

    public void internalFrameActivated(InternalFrameEvent e) {
    }

    public void internalFrameDeactivated(InternalFrameEvent e) {
    }

    public void keyTyped(KeyEvent e) {

    }

    public void keyPressed(KeyEvent e) {

       if(e.getKeyCode() == KeyEvent.VK_F7){
           System.out.println("F7");;
       }

    }

    public void keyReleased(KeyEvent e) {
        calculaUnitario();
    }
}
