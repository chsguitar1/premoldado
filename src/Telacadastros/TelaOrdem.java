/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TelaProduto.java
 *
 * Created on 30/09/2010, 22:59:10
 */
package Telacadastros;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.DateFormat;
import java.util.Calendar;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.event.InternalFrameEvent;
import javax.swing.event.InternalFrameListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import persistencia.Itensordprod;
import persistencia.Itensproduto;
import persistencia.Ordempropd;
import persistencia.Produto;
import Banco.Conexao;
import premoldados.TelaSistema;
import Telaconsulta.TelaConsulta;

/**
 *
 * @author chs
 */
public class TelaOrdem extends TelaCadastro implements InternalFrameListener, KeyListener, MouseListener {

    private JTable jtTabela = new JTable() {

        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };
    private DefaultTableModel dtm;
    Ordempropd ordeProdPer = new Ordempropd();
    Itensordprod itensOrdPoer = new Itensordprod();
    TelaConsulta consulta;
    TelaMateriaPrima telamatprima;
    public Vector colu = new Vector();
    private static final Calendar DATA_EMISSAO = Calendar.getInstance();
    private static final Calendar DATA_FINAL = Calendar.getInstance();

    /** Creates new form BeanForm */
    public TelaOrdem() {
        montaTabela(new String[]{"Codigo", "Descrição", "Quantidade"});
        jtTabela.addMouseListener(this);
        initComponents();
        jDateChooserIni.setEnabled(false);
        jDateChooserFim.setEnabled(false);
        campos.add(acaTextfieldCodigo);
        campos.add(acaTextfieldCodigoIt);

        campos.add(acaTextfieldNomeIt);
        campos.add(acaTextfieldQtde);

        campos.add(acaBotoes1);
        campos.add(acaBotoes2);
        campos.add(acaComboStatus);
        campos.add(acaBotoes3);
        campos.add(acaBotoes1);
        campos.add(acaComboStatus);
        campos.add(acaBotoes4);

        campos.add(acaBotoes5);
        acaComboStatus.setSelectedIndex(1);
        acaTextfieldQtde.addKeyListener(this);

        habilitaCampos(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanelPon = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        acaTextfieldCodigo = new componentes.AcaTextfield();
        jDateChooserIni = new componentes.AcaData();
        jDateChooserFim = new componentes.AcaData();
        jPanelItensPon1 = new javax.swing.JPanel();
        jScrollPaneTb = new javax.swing.JScrollPane(jtTabela);
        acaComboStatus = new componentes.AcaCombo();
        acaTextfieldCodigoIt = new componentes.AcaTextfield();
        acaTextfieldNomeIt = new componentes.AcaTextfield();
        acaTextfieldQtde = new componentes.AcaTextfield();
        acaBotoes1 = new componentes.AcaBotoes();
        acaBotoes2 = new componentes.AcaBotoes();
        acaBotoes3 = new componentes.AcaBotoes();
        acaBotoes4 = new componentes.AcaBotoes();
        acaTextfieldTotal = new componentes.AcaTextfield();
        acaBotoes5 = new componentes.AcaBotoes();
        acaMonetarioTotal = new componentes.AcaMonetario();
        acaMonetarioVlrUnit = new componentes.AcaMonetario();
        acaMonetarioSubTot = new componentes.AcaMonetario();

        setPreferredSize(new java.awt.Dimension(770, 657));
        setTitle("Cadastro de Ordem de Produção");

        jPanelPon.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do Produto"));

        jLabel1.setText("Data Inicial");

        jLabel2.setText("Codigo");

        jLabel3.setText("Data Final");

        acaTextfieldCodigo.setText("acaTextfield1");

        javax.swing.GroupLayout jPanelPonLayout = new javax.swing.GroupLayout(jPanelPon);
        jPanelPon.setLayout(jPanelPonLayout);
        jPanelPonLayout.setHorizontalGroup(
            jPanelPonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(acaTextfieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanelPonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPonLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel1)
                        .addGap(60, 60, 60)
                        .addComponent(jLabel3))
                    .addGroup(jPanelPonLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jDateChooserIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jDateChooserFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(127, Short.MAX_VALUE))
        );
        jPanelPonLayout.setVerticalGroup(
            jPanelPonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addGroup(jPanelPonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acaTextfieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooserIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooserFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanelItensPon1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Itens da Ordem de Produção", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jScrollPaneTb.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        acaTextfieldCodigoIt.setText("acaTextfield1");

        acaTextfieldNomeIt.setText("acaTextfield1");

        acaTextfieldQtde.setText("acaTextfield1");

        acaBotoes1.setText("acaBotoes1");

        acaBotoes2.setText("acaBotoes2");

        acaBotoes3.setText("acaBotoes3");

        acaBotoes4.setText("acaBotoes4");

        acaTextfieldTotal.setText("acaTextfield1");

        acaBotoes5.setText("acaBotoes5");

        acaMonetarioTotal.setText("acaMonetario1");

        acaMonetarioVlrUnit.setText("acaMonetario1");

        acaMonetarioSubTot.setText("acaMonetario1");

        javax.swing.GroupLayout jPanelItensPon1Layout = new javax.swing.GroupLayout(jPanelItensPon1);
        jPanelItensPon1.setLayout(jPanelItensPon1Layout);
        jPanelItensPon1Layout.setHorizontalGroup(
            jPanelItensPon1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelItensPon1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneTb, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(jPanelItensPon1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelItensPon1Layout.createSequentialGroup()
                        .addGroup(jPanelItensPon1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(acaBotoes5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(acaMonetarioVlrUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelItensPon1Layout.createSequentialGroup()
                        .addComponent(acaMonetarioSubTot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66))
                    .addGroup(jPanelItensPon1Layout.createSequentialGroup()
                        .addComponent(acaMonetarioTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(jPanelItensPon1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanelItensPon1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelItensPon1Layout.createSequentialGroup()
                        .addComponent(acaBotoes1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(acaBotoes2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(acaBotoes3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(acaBotoes4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelItensPon1Layout.createSequentialGroup()
                        .addComponent(acaTextfieldCodigoIt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(acaTextfieldNomeIt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(acaTextfieldQtde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelItensPon1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(acaTextfieldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(acaComboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52))))
        );
        jPanelItensPon1Layout.setVerticalGroup(
            jPanelItensPon1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelItensPon1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelItensPon1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acaComboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acaTextfieldCodigoIt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acaTextfieldNomeIt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acaTextfieldQtde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanelItensPon1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acaBotoes1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acaBotoes2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acaBotoes3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acaBotoes4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanelItensPon1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelItensPon1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPaneTb, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelItensPon1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(acaTextfieldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(acaBotoes5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(acaMonetarioVlrUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(acaMonetarioSubTot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(acaMonetarioTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelItensPon1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelPon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanelPon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelItensPon1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getPainelCentral());
        getPainelCentral().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(209, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void acaBotoesConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acaBotoesConsultaActionPerformed
        acaComboStatus.setSelectedIndex(0);
        if (consulta == null) {
            consulta = new TelaConsulta("Consulta Composição", this, new int[]{1, 2}, new String[]{"Codigo", "Nome"}, "composicao", "compocod", "componome", null, true);
            colu.addElement("CODIGO");
            colu.add("NOME");
            consulta.setColu(colu);
            consulta.setTodosB(true);
            consulta.addInternalFrameListener(this);
            tipoOperacao = PESQUISANDO;
            TelaSistema.jdp.add(consulta);
            consulta.setVisible(true);
        }
        TelaSistema.jdp.moveToFront(consulta);
}//GEN-LAST:event_acaBotoesConsultaActionPerformed

    private void acaComboComposicaoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_acaComboComposicaoItemStateChanged

        if (acaComboStatus.getSelectedIndex() >= 0) {
            if (acaComboStatus.isPopupVisible()) {
                if (!validaItens(acaComboStatus.getValor())) {
                    acaTextfieldCodigoIt.setText(String.valueOf(acaComboStatus.getValor()));
                    acaTextfieldNomeIt.setText(acaComboStatus.getSelectedItem().toString());

                    try {
                        ResultSet rs = Conexao.executaQuery("select compovlrtotal from composicao where compocod = " + acaComboStatus.getValor() + "");
                        rs.next();

                    } catch (SQLException e) {
                        e.printStackTrace();
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Ja existe a materia prima na composição");
                    acaComboStatus.setSelectedIndex(0);
                    return;
                }
            }

        }
}//GEN-LAST:event_acaComboComposicaoItemStateChanged

    private void acaBotoesAddItensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acaBotoesAddItensActionPerformed
        if (acaTextfieldQtde.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Informe a quantidade do Materia");

            return;
        } else {
            addItem();

        //     acaMonetarioTotal.setValor(Double.parseDouble(calculaTotal(acaMonetarioVlrUnit.getValor().toString())));
            acaTextfieldCodigoIt.setText("");
            acaTextfieldNomeIt.setText("");
            acaTextfieldQtde.setText("");

            acaComboStatus.setValor(0);

        }
    }//GEN-LAST:event_acaBotoesAddItensActionPerformed

    private void acaBotoesDelItActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acaBotoesDelItActionPerformed
        if (tipoOperacao == ALTERANDO) {
            itensOrdPoer.setOdcod(Integer.parseInt(acaTextfieldCodigo.getText()));
            itensOrdPoer.setCompocod(Integer.parseInt(dtm.getValueAt(jtTabela.getSelectedRow(), 0).toString()));
            Conexao.executaSql(itensOrdPoer.getExcluiSql());
            dtm.removeRow(jtTabela.getSelectedRow());

        } else {
            dtm.removeRow(jtTabela.getSelectedRow());
           // acaMonetarioTotal.setValor(Double.parseDouble(calculaTotal(acaMonetarioVlrUnit.getValor().toString())));

        }
}//GEN-LAST:event_acaBotoesDelItActionPerformed

    private void acaBotoesNMatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acaBotoesNMatActionPerformed
        if (telamatprima == null) {
            telamatprima = new TelaMateriaPrima();
            telamatprima.addInternalFrameListener(this);
            TelaSistema.jdp.add(telamatprima);
            telamatprima.setVisible(true);
            tipoOperacao = NOVOITEM;
        }
        TelaSistema.jdp.moveToFront(telamatprima);
        tipoOperacao = NOVOITEM;
}//GEN-LAST:event_acaBotoesNMatActionPerformed

    private void acaComboComposicaoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_acaComboComposicaoFocusGained
        if (tipoOperacao == NOVOITEM) {
            acaComboStatus.buscaResult("select compocod,componome from composicao");
        }

    }//GEN-LAST:event_acaComboComposicaoFocusGained

    private void acaBotoesLimarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acaBotoesLimarActionPerformed
        acaTextfieldCodigoIt.setText("");
        acaTextfieldNomeIt.setText("");

        acaTextfieldQtde.setText("");
        acaComboStatus.setSelectedIndex(0);


    }//GEN-LAST:event_acaBotoesLimarActionPerformed
    public void obterCampos() {
        if (tipoOperacao == ALTERANDO || tipoOperacao == EXCLUINDO) {
            ordeProdPer.setOdcod(Integer.parseInt(acaTextfieldCodigo.getText()));
        }

        ordeProdPer.setOrdstatus(acaComboStatus.getValor());
        DATA_EMISSAO.setTime(jDateChooserIni.getDate());
        DateFormat df = DateFormat.getDateInstance(DateFormat.SHORT);
        String data = df.format(DATA_EMISSAO.getTime()).toString();
        ordeProdPer.setOrddataini(data.replace("/", "."));
        DATA_FINAL.setTime(jDateChooserFim.getDate());
        DateFormat dffinal = DateFormat.getDateInstance(DateFormat.SHORT);
        String datafinal = dffinal.format(DATA_FINAL.getTime()).toString();
        ordeProdPer.setOrddatafim(datafinal.replace("/", "."));


    }

    public void preencheCampos() {
        if (tipoOperacao == PESQUISANDO) {
            acaTextfieldCodigo.setText(String.valueOf(ordeProdPer.getOdcod()));
        }


        acaComboStatus.setValor(ordeProdPer.getOrdstatus());

    }

    public boolean validaItens(int codigo) {
        for (int x = 0; x < dtm.getRowCount(); x++) {
            if (Integer.parseInt((String) dtm.getValueAt(x, 0)) == codigo) {
                return true;
            }

        }
        return false;

    }

    public void montaTabela(String[] colunas) {

        dtm = (DefaultTableModel) jtTabela.getModel();
        for (int i = 0; i < colunas.length; i++) {
            dtm.addColumn(colunas[i]);
        }

        jtTabela.getColumn(jtTabela.getColumnName(0)).setPreferredWidth(50);

        jtTabela.getColumn(jtTabela.getColumnName(2)).setPreferredWidth(90);
        jtTabela.getColumn(jtTabela.getColumnName(3)).setPreferredWidth(90);
        jtTabela.getColumn(jtTabela.getColumnName(4)).setPreferredWidth(90);
        jtTabela.getColumn(jtTabela.getColumnName(5)).setPreferredWidth(100);
        jtTabela.setModel(dtm);
        TableColumnModel modeloColuna = jtTabela.getColumnModel();

        jtTabela.getTableHeader().setReorderingAllowed(false);
        jtTabela.getColumnModel().getColumn(0).setMaxWidth(80);
        jtTabela.getColumnModel().getColumn(1).setMaxWidth(190);
        jtTabela.getColumnModel().getColumn(0).setPreferredWidth(80);
        jtTabela.getColumnModel().getColumn(1).setPreferredWidth(190);
        jtTabela.getColumnModel().getColumn(2).setPreferredWidth(100);
        jtTabela.getColumnModel().getColumn(2).setMaxWidth(100);


        jtTabela.getColumnModel().getColumn(0).setResizable(false);


        jtTabela.getColumnModel().getColumn(1).setResizable(false);
        DefaultTableCellRenderer renderer1 = new DefaultTableCellRenderer();
        renderer1.setHorizontalAlignment(SwingConstants.CENTER);
    }

    public void montaTabela(String textoSql) {

        try {
            while (dtm.getRowCount() > 0) {
                dtm.removeRow(0);
            }
            ResultSet rs1 = Conexao.executaQuery(textoSql);
            ResultSetMetaData rsmd1 = rs1.getMetaData();
            Vector vetor;
            while (rs1.next()) {
                vetor = new Vector();
                for (int i = 0; i < rsmd1.getColumnCount(); i++) {
                    vetor.add(rs1.getString(i + 1));

                }

                dtm.addRow(vetor);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não foi possível efetuar a pesquisa");
            e.printStackTrace();
        }

        TableColumnModel modeloColuna = jtTabela.getColumnModel();
        jtTabela.getTableHeader().setReorderingAllowed(false);
        jtTabela.getColumnModel().getColumn(0).setMaxWidth(180);
        jtTabela.getColumnModel().getColumn(0).setPreferredWidth(95);
        jtTabela.getColumnModel().getColumn(0).setResizable(false);
        jtTabela.getColumnModel().getColumn(1).setMaxWidth(70);
        jtTabela.getColumnModel().getColumn(1).setPreferredWidth(10);

        jtTabela.getColumnModel().getColumn(1).setResizable(false);

    }

    public void addItem() {

        Object[] item = {acaTextfieldCodigoIt.getText(), acaTextfieldNomeIt.getText().toUpperCase(), acaTextfieldQtde.getText()};
        PrencheTabela(item);
       // acaTextfieldTotal.setText(String.valueOf(calculaTotal()));
    }

    public void PrencheTabela(Object[] item) {
        dtm = (DefaultTableModel) jtTabela.getModel();
        dtm.addRow(item);

        jtTabela.setModel(dtm);
    }

    public void limparPesquisa() {
        while (dtm.getRowCount() > 0) {
            dtm.removeRow(0);
        }
    }

    @Override
    protected void cancelar() {
        super.cancelar();
        acaComboStatus.setSelectedIndex(0);
        acaComboStatus.setSelectedIndex(1);
        limparPesquisa();

    }

    @Override
    protected void incluir() {
        super.incluir();
        jDateChooserIni.setEnabled(true);
        jDateChooserFim.setEnabled(true);

    }

    @Override
    protected void consultar() {
        if (consulta == null) {
            consulta = new TelaConsulta("Consulta Ordem", this, new int[]{1, 2}, new String[]{"Codigo", "Nome"}, "ordempropd", "odcod", "odcod", null);
            colu.addElement("CODIGO");
            colu.add("NOME");
            consulta.setColu(colu);
            consulta.setTodosB(true);
            consulta.addInternalFrameListener(this);
            tipoOperacao = PESQUISANDO;
            TelaSistema.jdp.add(consulta);
            consulta.setVisible(true);
        }
        TelaSistema.jdp.moveToFront(consulta);
    }

    @Override
    public void consultaItens(int codigo) {
        try {
            ResultSet rs = Conexao.executaQuery("select compocod,componome,compovlrtotal from composicao where compocod = " + codigo + " ");
            rs.next();
            acaTextfieldCodigoIt.setText(String.valueOf(rs.getString(1)));
            acaTextfieldNomeIt.setText(rs.getString(2));

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    @Override
    protected void confirmar() {
        if (acaTextfieldQtde.getText().equals("0,00")) {
            JOptionPane.showMessageDialog(null, "Nao Itens cadastrados");
            return;
        } else {
            super.confirmar();
            acaComboStatus.setSelectedIndex(0);
            acaComboStatus.setSelectedIndex(1);
            limparPesquisa();
        }
        
    }

    @Override
    protected void excluir() {
        super.excluir();
        acaComboStatus.setSelectedIndex(0);
        acaComboStatus.setSelectedIndex(1);
        limparPesquisa();

    }

    @Override
    protected boolean incluirBD() {
        obterCampos();

        ResultSet rs = null;
        try {
            rs = ordeProdPer.getInsereRs();
            rs.next();
            itensOrdPoer.setOdcod(rs.getInt(1));
            for (int x = 0; x < jtTabela.getRowCount(); x++) {
                itensOrdPoer.setCompocod(Integer.parseInt(jtTabela.getValueAt(x, 0).toString()));
                itensOrdPoer.setIteordqtd(Integer.parseInt(jtTabela.getValueAt(x, 2).toString()));
                Conexao.executaSql(itensOrdPoer.getInsereSql());
                jDateChooserIni.setDate(null);
                jDateChooserFim.setDate(null);
                jDateChooserIni.setEnabled(false);
                jDateChooserFim.setEnabled(false);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return true;


    }

    @Override
    public void consultarDados(int codigo) {
        try {
            ordeProdPer.setOdcod(codigo);

            ResultSet rs = Conexao.executaQuery(ordeProdPer.getConsultaTodos());
            rs.next();
            ordeProdPer.setOdcod(rs.getInt(1));
            itensOrdPoer.setOdcod(rs.getInt(1));
            ordeProdPer.setOrddataini(rs.getString(2));
            ordeProdPer.setOrddatafim(rs.getString(3));
            ordeProdPer.setOrdstatus(rs.getInt(4));




        } catch (SQLException e) {
            e.printStackTrace();
        }
        preencheCampos();
        montaTabela(itensOrdPoer.getConsultaTodos());
        habilitaCampos(false);
        habilitaBotoesConsulta(true);

    }

    @Override
    protected boolean alterarBD() {
        obterCampos();
        if (ordeProdPer.verificaDuplicidadeAtualiza()) {
            ResultSet rs = null;
            try {
                Conexao.executaSql(ordeProdPer.getAtualizaSql());

                itensOrdPoer.setOdcod(Integer.parseInt(acaTextfieldCodigo.getText()));

                for (int x = 0; x < dtm.getRowCount(); x++) {
                    itensOrdPoer.setCompocod(Integer.parseInt(jtTabela.getValueAt(x, 0).toString()));
                    itensOrdPoer.setIteordqtd(Integer.parseInt(jtTabela.getValueAt(x, 2).toString()));
                  
                    Conexao.executaSql(itensOrdPoer.getAtualizaSql());
                }
                limparPesquisa();
            } catch (Exception e) {
            }
            return true;

        }
        return false;
    }

    @Override
    protected boolean excluirBD() {
        ordeProdPer.setOdcod(Integer.parseInt(acaTextfieldCodigo.getText()));
        int opcao = -1;
        if (Conexao.executaSqlExcluir(ordeProdPer.getExcluiSql()) == Conexao.DEPENDENCIA) {
            opcao = 1;
        } else {
            opcao = 0;
        }
        if (Conexao.executaSqlExcluir(ordeProdPer.getExcluiSql()) == Conexao.OUTROERRO) {
            opcao = 0;
            return false;
        }
        if (opcao == 1) {
            Object[] botoes = {"Sim", "Não"};
            int mensagem = JOptionPane.showOptionDialog(null, "Existe dependencia de dados \n Deseja inativar o cadastro",
                    "Sair", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, botoes, botoes[0]);
            if (mensagem == JOptionPane.YES_OPTION) {

                Conexao.executaSql("execute procedure inativastatus(" + ordeProdPer.getOdcod() + ",'ordempropd','odcod','ordstatus') ");
                habilitarBotoes(true);
                habilitaCampos(false);
                return false;

            }
            if (mensagem == JOptionPane.NO_OPTION) {
                habilitaCampos(true);
                return false;
            }


        }
        return true;

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private componentes.AcaBotoes acaBotoes1;
    private componentes.AcaBotoes acaBotoes2;
    private componentes.AcaBotoes acaBotoes3;
    private componentes.AcaBotoes acaBotoes4;
    private componentes.AcaBotoes acaBotoes5;
    private componentes.AcaCombo acaComboStatus;
    private componentes.AcaMonetario acaMonetarioSubTot;
    private componentes.AcaMonetario acaMonetarioTotal;
    private componentes.AcaMonetario acaMonetarioVlrUnit;
    private componentes.AcaTextfield acaTextfieldCodigo;
    private componentes.AcaTextfield acaTextfieldCodigoIt;
    private componentes.AcaTextfield acaTextfieldNomeIt;
    private componentes.AcaTextfield acaTextfieldQtde;
    private componentes.AcaTextfield acaTextfieldTotal;
    private componentes.AcaData jDateChooserFim;
    private componentes.AcaData jDateChooserIni;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelItensPon1;
    private javax.swing.JPanel jPanelPon;
    private javax.swing.JScrollPane jScrollPaneTb;
    // End of variables declaration//GEN-END:variables

    public void internalFrameOpened(InternalFrameEvent e) {
    }

    public void internalFrameClosing(InternalFrameEvent e) {
    }

    public void internalFrameClosed(InternalFrameEvent e) {
        if (e.getSource() == consulta) {
            consulta = null;
        }
    }

    public void internalFrameIconified(InternalFrameEvent e) {
    }

    public void internalFrameDeiconified(InternalFrameEvent e) {
    }

    public void internalFrameActivated(InternalFrameEvent e) {
    }

    public void internalFrameDeactivated(InternalFrameEvent e) {
    }

    public void keyTyped(KeyEvent e) {
    }

    public void keyPressed(KeyEvent e) {
    }

    public void keyReleased(KeyEvent e) {
    }

    public void mouseClicked(MouseEvent e) {
        if (e.getClickCount() == 2) {
            acaTextfieldCodigoIt.setText((String) dtm.getValueAt(jtTabela.getSelectedRow(), 0));
            acaTextfieldNomeIt.setText((String) dtm.getValueAt(jtTabela.getSelectedRow(), 1));
            acaTextfieldQtde.setText((String) dtm.getValueAt(jtTabela.getSelectedRow(), 2));
            System.out.println(dtm.getValueAt(jtTabela.getSelectedRow(), 3));
            System.out.println(dtm.getValueAt(jtTabela.getSelectedRow(), 4));

           // String teste = dtm.getValueAt(jtTabela.getSelectedRow(), 4).toString().replace(",", "");
         //   acaMonetarioSubTot.setValor(Double.parseDouble(teste));
            dtm.removeRow(jtTabela.getSelectedRow());


           // acaMonetarioTotal.setValor(Double.parseDouble(calculaTotal(acaMonetarioVlrUnit.getValor().toString())));
        }
    }

    public void mousePressed(MouseEvent e) {
    }

    public void mouseReleased(MouseEvent e) {
    }

    public void mouseEntered(MouseEvent e) {
    }

    public void mouseExited(MouseEvent e) {
    }
}
