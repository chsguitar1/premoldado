/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TelaCidade.java
 *
 * Created on 16/07/2010, 20:52:46
 */
package Telacadastros;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.event.InternalFrameEvent;
import javax.swing.event.InternalFrameListener;
import persistencia.Cidade;
import Banco.Conexao;
import premoldados.TelaSistema;
import Telaconsulta.TelaConsulta;

/**
 *
 * @author chs
 */
public class TelaCidade extends TelaCadastro implements InternalFrameListener {

    TelaConsulta consulta;
    public Cidade cidadeper = new Cidade();
    public Vector colu = new Vector();
    TelaEstado telaestado;

    /** Creates new form BeanForm */
    public TelaCidade() {
        initComponents();
        campos.add(acaTextfieldCodigo);
        campos.add(acaTextfieldNome);
        campos.add(acaComboEstado);
        campos.add(acaComboStatus);
        habilitaCampos(false);


    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        acaLabelCodigo = new componentes.AcaLabel();
        acaTextfieldCodigo = new componentes.AcaTextfield();
        acaLabelNome = new componentes.AcaLabel();
        acaTextfieldNome = new componentes.AcaTextfield(true,"Nome da Cidade",1);
        acaLabelEstado = new componentes.AcaLabel();
        acaComboEstado = new componentes.AcaCombo();
        acaComboEstado.buscaResult("select estcod,estnome from estado");
        jButtonNovo = new javax.swing.JButton();
        acaLabel1 = new componentes.AcaLabel();
        acaComboStatus = new componentes.AcaCombo();
        acaComboStatus.comboFiltro(new int[] {0,1}, new String[]{"Inativo","Ativo"} );

        setPreferredSize(new java.awt.Dimension(800, 300));
        setSize(new java.awt.Dimension(800, 300));
        setTitle("Cadastro de Cidades");

        acaLabelCodigo.setText("Codigo");

        acaTextfieldCodigo.setEditable(false);

        acaLabelNome.setText("Nome");

        acaLabelEstado.setText("Estado");

        acaComboEstado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                acaComboEstadoFocusGained(evt);
            }
        });

        jButtonNovo.setText("Novo");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });

        acaLabel1.setText("Status");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getPainelCentral());
        getPainelCentral().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(acaLabelCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(acaLabelNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(acaLabelEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(acaComboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonNovo))
                    .addComponent(acaTextfieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(acaTextfieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(156, 156, 156)
                        .addComponent(acaLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(acaComboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(173, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acaLabelCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acaTextfieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acaLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acaComboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acaComboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonNovo)
                    .addComponent(acaLabelEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acaTextfieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acaLabelNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
      if (telaestado == null) {
            telaestado = new TelaEstado();
            telaestado.addInternalFrameListener(this);
            TelaSistema.jdp.add(telaestado);
            telaestado.setVisible(true);
            //telaestado.setSize(800, 300);
        }
        TelaSistema.jdp.moveToFront(telaestado);
    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void acaComboEstadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_acaComboEstadoFocusGained
      acaComboEstado.buscaResult("select estcod,estnome from estado");
    }//GEN-LAST:event_acaComboEstadoFocusGained

    public void obterCampos() {
        if (tipoOperacao == ALTERANDO) {
            cidadeper.setCidcod(Integer.parseInt(acaTextfieldCodigo.getText()));
        }
        cidadeper.setCidnome(acaTextfieldNome.getText().toUpperCase());
        cidadeper.setEstcod(acaComboEstado.getValor());
        cidadeper.setStatus(acaComboStatus.getValor());
        if (tipoOperacao == EXCLUINDO) {
            cidadeper.setCidcod(Integer.parseInt(acaTextfieldCodigo.getText()));
        }
    }

    public void preencherCampos() {
        if (tipoOperacao == PESQUISANDO) {
            campos.add(acaTextfieldCodigo);

            acaTextfieldCodigo.setText(String.valueOf(cidadeper.getCidcod()));
            System.out.println(cidadeper.getCidcod());
        }
        acaTextfieldNome.setText(cidadeper.getCidnome());
        System.out.println(cidadeper.getCidnome());
        acaComboEstado.setValor(cidadeper.getEstcod());
        acaComboStatus.setValor(cidadeper.getStatus());
        System.out.println(cidadeper.getEstcod());
    }

    @Override
    protected void incluir() {
        super.incluir();
        campos.removeElement(acaTextfieldCodigo);
    }

    @Override
    protected void consultar() {
        if (consulta == null) {
            consulta = new TelaConsulta("Consulta Cidade", this, new int[]{1, 2}, new String[]{"codigo", "nome"}, "cidade", "cidcod", "cidnome", null);
            colu.add("CODIGO");
            colu.add("NOME");
            consulta.setColu(colu);
            consulta.addInternalFrameListener(this);
            TelaSistema.jdp.add(consulta);
            consulta.setVisible(true);
            tipoOperacao = PESQUISANDO;
        }
        TelaSistema.jdp.moveToFront(consulta);
    }

    /*@Override
    protected void cancelar() {
    tipoOperacao = PADRAO;
    limparCampos();
    habilitarBotoes(true);
    habilitaCampos(false);

    }*/

    @Override
    protected boolean incluirBD() {
        obterCampos();
        if (cidadeper.verificaDuplicidade()) {
            Conexao.executaSql(cidadeper.getInsereSql());
            return true;
        }
        return false;
    }

    @Override
    protected boolean alterarBD() {

        obterCampos();
        if (cidadeper.verificaDuplicidadeAtualizar()) {
            Conexao.executaSql(cidadeper.getAtualizaSql());
            return true;
        }
        return false;


    }
    @Override
    protected boolean excluirBD(){
     obterCampos();
        if (Conexao.executaSqlExcluir(cidadeper.getExcluiSql()) == Conexao.DEPENDENCIA) {
            Object[] botoes = {"Sim", "Não"};
        int opcao = JOptionPane.showOptionDialog(null, " Nao foi possivel excluir \n  extiste uma movimentaçao para o registro selecionado \n Deseja Inativa o registro ",
        "Sair", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, botoes, botoes[0]);
        if (opcao == JOptionPane.YES_OPTION) {
        Conexao.executaSql("EXECUTE PROCEDURE INATIVASTATUS("+Integer.parseInt(acaTextfieldCodigo.getText())+", 'cidade', 'cidcod', 'status')");
        limparCampos();
        habilitarBotoes(true);
        habilitaCampos(false);
        requestFocus();
        }
        if (opcao == JOptionPane.NO_OPTION) {
        habilitaCampos(true);

        }

            return false;
        } else {
            return true;
        }

    }

    @Override
    public void consultarDados(int codigo) {

        try {
            cidadeper.setCidcod(codigo);
           // JOptionPane.showMessageDialog(null, cidadeper.getConsultaTodos());
            ResultSet rs = Conexao.executaQuery(cidadeper.getConsultaTodos());
            rs.next();

            cidadeper.setCidcod(rs.getInt(1));
            cidadeper.setEstcod(rs.getInt(2));
            cidadeper.setCidnome(rs.getString(3));
            cidadeper.setStatus(rs.getInt(4));

            preencherCampos();
            habilitaCampos(false);
            habilitaBotoesConsulta(true);

        } catch (SQLException e) {
             e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Nao foi possivel realizar a consulta");
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private componentes.AcaCombo acaComboEstado;
    private componentes.AcaCombo acaComboStatus;
    private componentes.AcaLabel acaLabel1;
    private componentes.AcaLabel acaLabelCodigo;
    private componentes.AcaLabel acaLabelEstado;
    private componentes.AcaLabel acaLabelNome;
    private componentes.AcaTextfield acaTextfieldCodigo;
    private componentes.AcaTextfield acaTextfieldNome;
    private javax.swing.JButton jButtonNovo;
    // End of variables declaration//GEN-END:variables

    public void internalFrameOpened(InternalFrameEvent e) {
    }

    public void internalFrameClosing(InternalFrameEvent e) {
    }

    public void internalFrameClosed(InternalFrameEvent e) {
        if (e.getSource() == consulta) {
            consulta = null;
        }
          if (e.getSource() == telaestado) {
            telaestado = null;
        }

    }

    public void internalFrameIconified(InternalFrameEvent e) {
    }

    public void internalFrameDeiconified(InternalFrameEvent e) {
    }

    public void internalFrameActivated(InternalFrameEvent e) {
    }

    public void internalFrameDeactivated(InternalFrameEvent e) {
    }
}
